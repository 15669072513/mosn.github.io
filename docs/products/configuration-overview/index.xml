<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MOSN – 配置概览</title>
    <link>https://mosn.io/docs/products/configuration-overview/</link>
    <description>Recent content in 配置概览 on MOSN</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 20 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://mosn.io/docs/products/configuration-overview/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: ClusterManager 配置</title>
      <link>https://mosn.io/docs/products/configuration-overview/clustermanager/</link>
      <pubDate>Fri, 25 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://mosn.io/docs/products/configuration-overview/clustermanager/</guid>
      <description>
        
        
        &lt;p&gt;本文是关于 MOSN ClusterManager 配置的说明。&lt;/p&gt;
&lt;p&gt;MOSN 中通过 &lt;code&gt;cluster_manager&lt;/code&gt; 来管理转发的集群地址，通常与 &lt;a href=&#34;https://mosn.io/docs/configuration/server/router/#route&#34;&gt;Router&lt;/a&gt; 配合使用。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-josn&#34; data-lang=&#34;josn&#34;&gt;&amp;quot;cluster_manager&amp;quot;:{
  &amp;quot;tls_context&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;cluster_pool_enable&amp;quot;: &amp;quot;&amp;quot;,
  &amp;quot;clusters_configs&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;clusters&amp;quot;:[]
}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tls_context&lt;/code&gt;，可选配置，用于描述 Cluster 全局共享的 TLS 配置，该配置项需要结合 clusters 配置中的 cluster_manager_tls 配置项一起使用，TLS 详细配置见 &lt;a href=&#34;https://mosn.io/docs/configuration/custom/#tls_context&#34;&gt;tls_context 文档&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cluster_pool_enable&lt;/code&gt;，可选配置，bool 类型，用于控制所有Cluster是否使用独占的连接池，为 true 则使用Cluster独占连接池，默认值为 false。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clusters_configs&lt;/code&gt;，可选配置，字符串类型，用于设置 Cluster 列表从 clusters_configs 指定的文件中解析。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clusters&lt;/code&gt;，用于描述每个 Cluster 所采用的负载均衡算法、类型等细节信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：cluster_manager 中的 clusters 和 clusters_configs 不能同时配置。&lt;/p&gt;
&lt;h2 id=&#34;cluster&#34;&gt;cluster&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-josn&#34; data-lang=&#34;josn&#34;&gt;{
  &amp;quot;name&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;type&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;sub_type&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;lb_type&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;max_request_per_conn&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;conn_buffer_limit_bytes&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;circuit_breakers&amp;quot;:&amp;quot;&amp;quot;，
  &amp;quot;health_check&amp;quot;:&amp;quot;&amp;quot;，
  &amp;quot;spec&amp;quot;:&amp;quot;&amp;quot;，
  &amp;quot;lb_subset_config&amp;quot;:&amp;quot;&amp;quot;，
  &amp;quot;original_dst_lb_config&amp;quot;:&amp;quot;&amp;quot;，
  &amp;quot;cluster_manager_tls&amp;quot;:&amp;quot;&amp;quot;，
  &amp;quot;tls_context&amp;quot;:&amp;quot;&amp;quot;，
  &amp;quot;hosts&amp;quot;:[],
  &amp;quot;connect_timeout&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;idle_timeout&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;lbconfig&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;dns_refresh_rate&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;respect_dns_ttl&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;dns_lookup_family&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;dns_resolvers&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;dns_resolver_file&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;dns_resolver_port&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;cluster_pool_enable&amp;quot;:&amp;quot;&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;，字符串。用作 Cluster 的唯一标识。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type&lt;/code&gt;，字符串。用于表示 Cluster 的类型，目前支持的类型如下：
&lt;ul&gt;
&lt;li&gt;SIMPLE，是最基础的类型。&lt;/li&gt;
&lt;li&gt;ORIGINAL_DST，该种类型的&lt;/li&gt;
&lt;li&gt;STRICT_DNS，该种类型会动态解析 Cluster 中的域名列表，并将域名对应的 A 记录全部加入转发列表中。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sub_type&lt;/code&gt;，已废弃。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lb_type&lt;/code&gt;，字符串。在集群中选择主机时使用的负载平衡器类型，目前支持的类型如下：
&lt;ul&gt;
&lt;li&gt;LB_ROUNDROBIN，不带权重的轮训转发。&lt;/li&gt;
&lt;li&gt;LB_RANDOM，随机转发。&lt;/li&gt;
&lt;li&gt;LB_WEIGHTED_ROUNDROBIN，根据 host 的权重转发。&lt;/li&gt;
&lt;li&gt;LB_ORIGINAL_DST，在透明劫持场景下使用原始目标地址做转发，也可以通过请求 header 设置目标地址。&lt;/li&gt;
&lt;li&gt;LB_LEAST_REQUEST，选择请求数最少的 host 转发。&lt;/li&gt;
&lt;li&gt;LB_MAGLEV，一致性 hash 转发。&lt;/li&gt;
&lt;li&gt;LB_REQUEST_ROUNDROBIN，同一个请求粒度的轮训转发。&lt;/li&gt;
&lt;li&gt;LB_LEAST_CONNECTION，选择连接数最少的 host 转发。&lt;/li&gt;
&lt;li&gt;LB_PEAK_EWMA，基于延迟的负载均衡算法，通过记录主机的延迟，选择延迟较好并避免选择较差的主机&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;max_request_per_conn&lt;/code&gt;，uint32 类型，暂未实现。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;conn_buffer_limit_bytes&lt;/code&gt;，uint32 类型，暂未实现。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;circuit_breakers&lt;/code&gt;，CircuitBreakers 类型，既 &lt;a href=&#34;#Thresholds&#34;&gt;Thresholds&lt;/a&gt; 类型的数组，用于配置 Cluster 的熔断配置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;health_check&lt;/code&gt;，&lt;a href=&#34;#HealthCheck&#34;&gt;HealthCheck&lt;/a&gt; 类型，群集可选的健康检查配置。如果未指定该配置，则不会执行主动健康检查，且默认群集中的成员都将是健康状态。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spec&lt;/code&gt;，暂未使用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lb_subset_config&lt;/code&gt;，&lt;a href=&#34;#LBSubsetConfig&#34;&gt;LBSubsetConfig&lt;/a&gt; 类型，用于配置负载均衡的子集。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;original_dst_lb_config&lt;/code&gt;，&lt;a href=&#34;#LBOriDstConfig&#34;&gt;LBOriDstConfig&lt;/a&gt; 类型，用于配置 LB_ORIGINAL_DST 类型的负载均衡器配置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cluster_manager_tls&lt;/code&gt;，bool 类型，用于控制每个 Cluster 是否使用全局共享的 TLS 配置，为 true 则共享，默认值为 false。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tls_context&lt;/code&gt;，TLSConfig 类型，连接到上游群集的 TLS 配置。若没有指定 TLS 配置，则新连接不会使用 TLS，配置实例参考 &lt;a href=&#34;https://mosn.io/docs/configuration/custom/#tls_context&#34;&gt;tls_context 文档&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hosts&lt;/code&gt;，[]&lt;a href=&#34;#Host&#34;&gt;Host&lt;/a&gt;  类型，用于配置 Cluster 中的机器列表。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;connect_timeout&lt;/code&gt;，&lt;a href=&#34;../custom#duration-string&#34;&gt;Duration&lt;/a&gt; 类型，连接到该群集中主机的超时时长，默认值为 3 秒。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;idle_timeout&lt;/code&gt;，&lt;a href=&#34;../custom#duration-string&#34;&gt;Duration&lt;/a&gt; 类型，用于设置 Cluster 中的连接空闲超时时间，若发生超时则会断开连接，中默认值为 0，表示不设置连接的空闲超时。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lbconfig&lt;/code&gt;，&lt;a href=&#34;#lbconfig&#34;&gt;LbConfig&lt;/a&gt;类型，为负载均衡器提供的扩展配置，目前只有 LB_LEAST_REQUEST/LB_LEAST_CONNECTION/LB_PEAK_EWMA 类型的负载均衡器有使用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dns_refresh_rate&lt;/code&gt;，&lt;a href=&#34;../custom#duration-string&#34;&gt;Duration&lt;/a&gt; 类型，在群集类型是 STRICT_DNS 时，用于设置 DNS 刷新频率，此值默认为 5 秒。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;respect_dns_ttl&lt;/code&gt;，bool 类型，用于设置当 Cluster 类型为 STRICT_DNS 时，其域名对应的解析频率是否遵循 DNS 返回的 TTL。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dns_lookup_family&lt;/code&gt;，字符串类型，DNS IP 地址解析策略。 如果未指定此设置，则该值默认为 V4_ONLY。取值列表如下：
&lt;ul&gt;
&lt;li&gt;V4_ONLY，表示只解析 IPv4&lt;/li&gt;
&lt;li&gt;V6_ONLY，表示只解析 IPv6&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dns_resolvers&lt;/code&gt;，&lt;a href=&#34;#DnsResolverConfig&#34;&gt;DnsResolverConfig&lt;/a&gt; 类型，在群集类型是 STRICT_DNS，此值用于指定群集的 DNS 解析相关配置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dns_resolver_file&lt;/code&gt;，字符串类型，用于设置 DNS server 列表的文件路径，该值默认为使用 /etc/resolv.conf 配置的默认解析器，该配置项仅在 dns_resolvers 未配置时生效。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dns_resolver_port&lt;/code&gt;，字符串类型，用于设置 DNS server 地址的 port，默认值为 53，该配置项仅在 dns_resolvers 未配置时生效。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cluster_pool_enable&lt;/code&gt;，bool 类型，用于控制当前Cluster是否使用独占的连接池，为 true 则使用独占连接池，默认值为 false。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;thresholds&#34;&gt;Thresholds&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-josn&#34; data-lang=&#34;josn&#34;&gt;{
  &amp;quot;max_connections&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;max_pending_requests&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;max_requests&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;max_retries&amp;quot;:&amp;quot;&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;max_connections&lt;/code&gt;，uint32 类型。用于设置 Cluster 中每台机器的最大连接数，对于 HTTP 协议，超过后会响应 502，对于多路复用协议则是控制单个 host 建立的最大连接数。默认值为 0 表示不启用该配置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;max_pending_requests&lt;/code&gt;，uint32 类型。代表 Cluster 的最大排队数量，暂未使用到。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;max_requests&lt;/code&gt;，uint32 类型。将对上游群集执行的最大并行请求数，若超过限制则会响应 502，目前仅在 HTTP 系协议下生效。默认值为 0 表示不启用该配置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;max_retries&lt;/code&gt;，uint32 类型。允许上游集群执行的最大并行重试次数，目前只在 HTTP 系协议下生效。默认值为 0 表示不启用该配置。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;healthcheck&#34;&gt;HealthCheck&lt;/h2&gt;
&lt;p&gt;HealthCheckConfig&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-josn&#34; data-lang=&#34;josn&#34;&gt;{
  &amp;quot;protocol&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;timeout&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;interval&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;interval_jitter&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;healthy_threshold&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;unhealthy_threshold&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;service_name&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;check_config&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;event_log_path&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;common_callbacks&amp;quot;:&amp;quot;&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;protocol&lt;/code&gt;，字符串类型，用于设置 Cluster 发起健康检查使用的协议类型，目前只支持 TCP。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timeout&lt;/code&gt;，&lt;a href=&#34;../custom#duration-string&#34;&gt;Duration&lt;/a&gt; 类型，等待健康检查响应的时间。如果达到超时，则尝试健康检查将被视为失败。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;interval&lt;/code&gt;，&lt;a href=&#34;../custom#duration-string&#34;&gt;Duration&lt;/a&gt; 类型，每次尝试健康检查之间的时间间隔。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;interval_jitter&lt;/code&gt;，&lt;a href=&#34;../custom#duration-string&#34;&gt;Duration&lt;/a&gt; 类型，用于设置 interval 的随机抖动量，设置后将抖动量叠加到 interval 上。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;healthy_threshold&lt;/code&gt;，uint32 类型，主机在标记为健康之前所需的连续健康检查次数，默认值为 1。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;unhealthy_threshold&lt;/code&gt;，uint32 类型，在主机被标记为不健康之前，需要进行连续不健康的健康检查次数，默认值为 1。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;service_name&lt;/code&gt;，字符串类型，暂未支持。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;check_config&lt;/code&gt;，map[string]interface{} 类型，用于健康检查的扩展配置，当前支持 &amp;ldquo;http_check_config&amp;rdquo;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;event_log_path&lt;/code&gt;, 字符串类型，健康检查日志路径。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;common_callbacks&lt;/code&gt;，[]string 类型，用于设置对应 Cluster 健康检查时执行的 callback。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;lbsubsetconfig&#34;&gt;LBSubsetConfig&lt;/h2&gt;
&lt;p&gt;LBSubsetConfig 主要用于 Cluster 中更为灵活的请求路由，列如 ABTesting、金丝雀发布、单元化等。详细使用可以参考 &lt;a href=&#34;https://mosn.io/blog/posts/how-use-dynamic-metadata/#mosn-subset&#34;&gt;MOSN subset 路由实践&lt;/a&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-josn&#34; data-lang=&#34;josn&#34;&gt;{
  &amp;quot;fall_back_policy&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;default_subset&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;subset_selectors&amp;quot;:&amp;quot;&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fall_back_policy&lt;/code&gt;，uint8 类型，用于设置在查找子集群失败时的容灾策略，当前支持如下配置：
&lt;ul&gt;
&lt;li&gt;0，表示 NoFallBack，没有查找到匹配的子集群则不使用容灾策略&lt;/li&gt;
&lt;li&gt;1，表示 AnyEndPoint，既在 Cluster 的 Host 列表中轮训选择目标机器&lt;/li&gt;
&lt;li&gt;2，表示使用 DefaultSubset 策略重新查找子集群&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;default_subset&lt;/code&gt;，map[string]string 类型，如果 fallback_policy 为 2 既 DEFAULT_SUBSET，则指定在回退期间使用的端点的默认子集。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;subset_selectors&lt;/code&gt;，[][]string 类型，用于设置子集群匹配规则查找的条目。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;lboridstconfig&#34;&gt;LBOriDstConfig&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-josn&#34; data-lang=&#34;josn&#34;&gt;{
  &amp;quot;use_header&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;header_name&amp;quot;:&amp;quot;&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;use_header&lt;/code&gt;，bool 类型，将该配置设置为 true 且负载均衡器使用 LB_ORIGINAL_DST 类型时，则转发的目标地址通过 header_name 从当前请求 header 中获取。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;header_name&lt;/code&gt;，字符串类型，用于设置目标地址从 header_name 对应的 header 中获取，默认值为 host。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;host&#34;&gt;Host&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-josn&#34; data-lang=&#34;josn&#34;&gt;{
  &amp;quot;address&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;hostname&amp;quot;:&amp;quot;&amp;quot;
  &amp;quot;weight&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;metadata&amp;quot;:&amp;quot;&amp;quot;，
  &amp;quot;tls_disable&amp;quot;:&amp;quot;&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;address&lt;/code&gt;，字符串类型，用于设置集群的地址和端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hostname&lt;/code&gt;，字符串类型，对应地址的名称，可以是一个域名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;，uint32 类型，对应地址的权重。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;metadata&lt;/code&gt;，*MetadataConfig 类型，用于设置对应机器的 metadata 信息，通常和 LBSubsetConfig 一起使用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tls_disable&lt;/code&gt;，bool 类型，用于标记对应机器是否开启 TLS。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;dnsresolverconfig&#34;&gt;DnsResolverConfig&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-josn&#34; data-lang=&#34;josn&#34;&gt;{
  &amp;quot;servers&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;search&amp;quot;:&amp;quot;&amp;quot;
  &amp;quot;port&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;ndots&amp;quot;:&amp;quot;&amp;quot;，
  &amp;quot;timeout&amp;quot;:&amp;quot;&amp;quot;，
  &amp;quot;attempts&amp;quot;:&amp;quot;&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;servers&lt;/code&gt;，[]string 类型，用于设置 DNS 服务器列表。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;search&lt;/code&gt;，[]string 类型，用于设置和目标域名拼接的后缀列表，结合 ndots 使用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;port&lt;/code&gt;，字符串类型，设置发起 DNS 请求的端口，默认值为 53。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ndots&lt;/code&gt;，int 类型，用于设置 DNS 查询域名是否将 search 中的列表依次追加到待查询域名末尾，如果该值大于待查询域名中的 “.” 数量，则将待查询域名末尾拼依次接 search 中设置的后缀，默认值为 0。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timeout&lt;/code&gt;，int 类型，用于设置 DNS 更新超时时间，单位为秒。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;attempts&lt;/code&gt;，int 类型，一次 DNS 请求中尝试查询的 DSN server 的次数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;lbconfig&#34;&gt;LbConfig&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;choice_count&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;active_request_bias&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;choice_count&lt;/code&gt;，uint32类型，用来设置随机算法的随机选择次数，当配置了&lt;code&gt;lbconfig&lt;/code&gt;时必填，且必须大于0&lt;/li&gt;
&lt;li&gt;&lt;code&gt;active_request_bias&lt;/code&gt;，float64类型，用来设置负载均衡算法对&lt;code&gt;active_request&lt;/code&gt;和&lt;code&gt;connection_active&lt;/code&gt;指标的偏好&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Server 配置</title>
      <link>https://mosn.io/docs/products/configuration-overview/server/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://mosn.io/docs/products/configuration-overview/server/</guid>
      <description>
        
        
        &lt;p&gt;本文是关于 MOSN server 配置的说明。&lt;/p&gt;
&lt;p&gt;虽然 MOSN 的配置结构里 &lt;code&gt;servers&lt;/code&gt; 是一个 server 数组，但是目前最多只支持配置一个server。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;server&lt;/code&gt; 描述的 MOSN 的基本的全局参数如下所示。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-josn&#34; data-lang=&#34;josn&#34;&gt;{
  &amp;quot;mosn_server_name&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;default_log_path&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;default_log_level&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;global_log_roller&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;use_netpoll_mode&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;graceful_timeout&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;optimize_local_write&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;processor&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;listeners&amp;quot;:[],
  &amp;quot;routers&amp;quot;:[]
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;mosn_server_name&#34;&gt;mosn_server_name&lt;/h2&gt;
&lt;p&gt;字符串类型，用于设置当前 server 的标识。&lt;/p&gt;
&lt;h2 id=&#34;default_log_path&#34;&gt;default_log_path&lt;/h2&gt;
&lt;p&gt;默认的错误日志文件路径，支持配置完整的日志路径，以及标准输出（stdout）和标准错误（stderr）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果配置为空，则默认输出到标准错误（stderr）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;default_log_level&#34;&gt;default_log_level&lt;/h2&gt;
&lt;p&gt;默认的错误日志级别，支持&lt;code&gt;DEBUG&lt;/code&gt;、&lt;code&gt;INFO&lt;/code&gt;、&lt;code&gt;WARN&lt;/code&gt;、&lt;code&gt;ERROR&lt;/code&gt;、&lt;code&gt;FATAL&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果配置为空，则默认为 &lt;code&gt;INFO&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;global_log_roller&#34;&gt;global_log_roller&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;日志轮转配置，会对所有的日志生效，如 tracelog、accesslog、defaultlog。&lt;/li&gt;
&lt;li&gt;字符串配置，支持两种模式的配置，一种是按时间轮转，一种是按日志大小轮转。同时只能有一种模式生效。&lt;/li&gt;
&lt;li&gt;按照日志大小轮转
&lt;ul&gt;
&lt;li&gt;size， 表示日志达到多少 M 进行轮转。&lt;/li&gt;
&lt;li&gt;age，表示最多保存多少天的日志。&lt;/li&gt;
&lt;li&gt;keep，表示最多保存多少个日志。&lt;/li&gt;
&lt;li&gt;compress，表示日志是否压缩，on 为压缩，off 为不压缩。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;global_log_roller&amp;quot;: &amp;quot;size=100 age=10 keep=10 compress=off&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;按照时间轮转
&lt;ul&gt;
&lt;li&gt;time，表示每个多少个小时轮转一次。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;global_log_roller&amp;quot;:&amp;quot;time=1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;use_netpoll_mode&#34;&gt;use_netpoll_mode&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;bool 类型，设置为 true 则表示开启 MOSN 的网络处理采用 netpoll 模型，默认值为 false。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;graceful_timeout&#34;&gt;graceful_timeout&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../custom#duration-string&#34;&gt;Duration String &lt;/a&gt;的字符串配置，表示 MOSN 在进行平滑升级时，等待连接关闭的最大时间。&lt;/li&gt;
&lt;li&gt;如果没有配置，默认为 30s。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;optimize_local_write&#34;&gt;optimize_local_write&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;bool 类型，设置为 true 则表示当连接的目标地址是 Localhost 时，将使用 goroutine 进行异步写入，这样可以获得更好的性能，但降低了写入时间的准确性，默认值为 false。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;processor&#34;&gt;processor&lt;/h3&gt;
&lt;p&gt;MOSN 使用的 &lt;code&gt;GOMAXPROCS&lt;/code&gt; 数量&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果没有配置，默认为 CPU 数量。&lt;/li&gt;
&lt;li&gt;如果配置为 0，等价于没有配置。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;listeners&#34;&gt;listeners&lt;/h2&gt;
&lt;p&gt;一组 &lt;a href=&#34;./listener&#34;&gt;Listener&lt;/a&gt; 的配置。&lt;/p&gt;
&lt;h2 id=&#34;routers&#34;&gt;routers&lt;/h2&gt;
&lt;p&gt;一组&lt;a href=&#34;./router&#34;&gt;Router&lt;/a&gt;的配置。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Trace 配置</title>
      <link>https://mosn.io/docs/products/configuration-overview/trace/</link>
      <pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://mosn.io/docs/products/configuration-overview/trace/</guid>
      <description>
        
        
        &lt;p&gt;本文是关于 MOSN trace 配置的说明。&lt;/p&gt;
&lt;h2 id=&#34;mosn-的-tracing-框架&#34;&gt;MOSN 的 tracing 框架&lt;/h2&gt;
&lt;p&gt;MOSN 的 tracing 框架由 Driver、Tracer 和 Span 三个部分组成。&lt;/p&gt;
&lt;p&gt;Driver 是 Tracer 的容器，管理注册的 Tracer 实例，Tracer 是 tracing 的入口，根据请求信息创建一个 Span，Span 存储当前跨度的链路信息。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;mosn-tracing.jpg&#34; alt=&#34;MOSN 中的 tracing 架构&#34;&gt;&lt;/p&gt;
&lt;p&gt;目前 MOSN tracing 有 SOFATracer 和 SkyWalking 两种实现。SOFATracer 支持 http1 和 xprotocol 协议的链路追踪，将 trace 数据写入本地日志文件中。SkyWalking 支持 http1 协议的链路追踪，使用原生的 Go 语言探针 &lt;a href=&#34;https://github.com/SkyAPM/go2sky&#34;&gt;go2sky&lt;/a&gt; 将 trace 数据通过 gRPC 上报到 SkyWalking 后端服务。&lt;/p&gt;
&lt;h2 id=&#34;配置项说明&#34;&gt;配置项说明&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;tracing&lt;/code&gt; 相关配置项如下所示。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;tracing&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;enable&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;driver&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;config&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
      
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;enable&#34;&gt;enable&lt;/h3&gt;
&lt;p&gt;bool类型，表示启用或禁用trace。&lt;/p&gt;
&lt;h3 id=&#34;driver&#34;&gt;driver&lt;/h3&gt;
&lt;p&gt;目前支持 &lt;code&gt;SOFATracer&lt;/code&gt; 和 &lt;code&gt;SkyWalking&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;config&#34;&gt;config&lt;/h3&gt;
&lt;p&gt;不同driver的自定义配置。config里面的配置项由每个driver自己设计。比如 SkyWalking 的配置项可以参考 &lt;a href=&#34;skywalking/&#34;&gt;SkyWalking配置&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 自定义配置</title>
      <link>https://mosn.io/docs/products/configuration-overview/custom/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://mosn.io/docs/products/configuration-overview/custom/</guid>
      <description>
        
        
        &lt;p&gt;本文是对 MOSN 自定义配置的说明。&lt;/p&gt;
&lt;h3 id=&#34;duration-string&#34;&gt;Duration String&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;字符串，由一个十进制数字和一个时间单位后缀组成，有效的时间单位为 &lt;code&gt;ns&lt;/code&gt;、&lt;code&gt;us&lt;/code&gt;（或&lt;code&gt;µs&lt;/code&gt;）、&lt;code&gt;ms&lt;/code&gt;、&lt;code&gt;s&lt;/code&gt;、&lt;code&gt;m&lt;/code&gt;、&lt;code&gt;h&lt;/code&gt;，例如 &lt;code&gt;1h&lt;/code&gt;、&lt;code&gt;3s&lt;/code&gt;、&lt;code&gt;500ms&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;metadata&#34;&gt;metadata&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;metadata&lt;/code&gt; 用于 MOSN 路由和 Cluster Host 之间的匹配。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;filter_metadata&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;mosn.lb&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:{}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;mosn.lb&lt;/code&gt; 可对应任意的 &lt;code&gt;string-string&lt;/code&gt; 的内容。&lt;/p&gt;
&lt;h3 id=&#34;tls_context&#34;&gt;tls_context&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;server_name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;ca_cert&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;cert_chain&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;private_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;verify_client&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;require_client_cert&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;insecure_skip&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;cipher_suites&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;ecdh_curves&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;min_version&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;max_version&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;alpn&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;fall_back&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;extend_verify&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;sds_source&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:{}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;status&lt;/code&gt;，bool类型，表示是否开启 TLS，默认是 false。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type&lt;/code&gt;，字符串类型，描述 tls_context 的类型。tls_context 支持扩展实现，不同的 type 对应不同的实现方式，默认实现方式对应的 type 是空字符串。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;server_name&lt;/code&gt;，当没有配置 insecure_skip 时，用于校验服务端返回证书的 hostname。作为Cluster配置时有效。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ca_cert&lt;/code&gt;，证书签发的根 CA 证书。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cert_chain&lt;/code&gt;，TLS 证书链配置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;private_key&lt;/code&gt;，证书私钥配置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;verify_client&lt;/code&gt;，bool 类型，作为 Listener 配置时有效，表示是否要校验 Client 端证书&lt;/li&gt;
&lt;li&gt;&lt;code&gt;require_client_cert&lt;/code&gt;，bool 类型，表示是否强制 Client 端必须携带证书。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;insecure_skip&lt;/code&gt;，bool 类型，作为 Cluster 配置时有效，表示是否要忽略 Server 端的证书校验。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cipher_suites&lt;/code&gt;，如果配置了该配置，那么 TLS 连接将只支持配置了的密码套件，并且会按照配置的顺序作为优先级使用，支持的套件类型如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;ECDHE-ECDSA-AES256-GCM-SHA384
ECDHE-RSA-AES256-GCM-SHA384
ECDHE-ECDSA-AES128-GCM-SHA256
ECDHE-RSA-AES128-GCM-SHA256
ECDHE-ECDSA-WITH-CHACHA20-POLY1305
ECDHE-RSA-WITH-CHACHA20-POLY1305
ECDHE-RSA-AES256-CBC-SHA
ECDHE-RSA-AES128-CBC-SHA
ECDHE-ECDSA-AES256-CBC-SHA
ECDHE-ECDSA-AES128-CBC-SHA
RSA-AES256-CBC-SHA
RSA-AES128-CBC-SHA
ECDHE-RSA-3DES-EDE-CBC-SHA
RSA-3DES-EDE-CBC-SHA
ECDHE-RSA-SM4-SM3
ECDHE-ECDSA-SM4-SM3
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ecdh_curves&lt;/code&gt;，如果配置了该配置，那么 TLS 连接将只支持配置了的曲线。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;支持 x25519、p256、p384、p521。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;min_version&lt;/code&gt;，最低的 TLS 协议版本，默认是 TLS1.0。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;支持 TLS1.0、TLS1.1、TLS1.2。&lt;/li&gt;
&lt;li&gt;默认会自动识别可用的 TLS 协议版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;max_version&lt;/code&gt;，最高的 TLS 协议版本，默认是 TLS1.2。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;支持 TLS1.0、TLS1.1、TLS1.2。&lt;/li&gt;
&lt;li&gt;默认会自动识别可用的 TLS 协议版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;alpn&lt;/code&gt;，TLS 的 ALPN 配置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;支持 h2、http/1.1、 sofa。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fall_back&lt;/code&gt;，bool类型，当配置为 true 时，如果证书解析失败，不会报错而是相当于没有开启 TLS。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;extend_verify&lt;/code&gt;，任意 json 类型，当 type 为非空时，作为扩展的配置参数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sds_source&lt;/code&gt;，访问 SDS API 的配置，如果配置了这个配置，&lt;code&gt;ca_cert&lt;/code&gt;、&lt;code&gt;cert_chain&lt;/code&gt; 和 &lt;code&gt;private_key&lt;/code&gt; 都会被忽略，但是其余的配置依然有效。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sds_source&#34;&gt;sds_source&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;CertificateConfig&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:{},&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;ValidationConfig&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:{}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CertificateConfig&lt;/code&gt; 描述了如何获取 cert_chain 和 private_key 的配置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ValidationConfig&lt;/code&gt; 描述了如何获取 &lt;code&gt;ca_cert&lt;/code&gt; 的配置。&lt;/li&gt;
&lt;li&gt;详细的 Config 内容参考 &lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/auth/cert.proto#envoy-api-msg-auth-sdssecretconfig&#34;&gt;envoy: sdssecretconfig&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
