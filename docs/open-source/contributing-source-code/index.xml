<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MOSN – 贡献源码须知</title>
    <link>https://mosn.io/docs/open-source/contributing-source-code/</link>
    <description>Recent content in 贡献源码须知 on MOSN</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://mosn.io/docs/open-source/contributing-source-code/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 贡献指引</title>
      <link>https://mosn.io/docs/open-source/contributing-source-code/contribute/</link>
      <pubDate>Tue, 15 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://mosn.io/docs/open-source/contributing-source-code/contribute/</guid>
      <description>
        
        
        &lt;h2 id=&#34;mosn-贡献指引&#34;&gt;MOSN 贡献指引&lt;/h2&gt;
&lt;p&gt;首先很感谢您有兴趣给 MOSN 提交 PR。
为了能更高效的推进 PR 的合并，我们有一些推荐的做法，希望能有所帮助。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建分支
推荐使用新分支来开发，master 分支推荐保持跟 MOSN 上游主分支保持一致&lt;/li&gt;
&lt;li&gt;PR 需要说明意图
如果已经有对应讨论的 issue，可以引用 issue
如果没有 issue，需要描述清楚 PR 的意图，比如 bug 的情况。
如果改动比较大，最好可以比较详细的改动说明介绍。&lt;/li&gt;
&lt;li&gt;提交新的 commit 来处理 review 意见
当 PR 收到 review 意见后，有新的改动，推荐放到新的 commit，不要追加到原来的 commit，这样方便 reviewer 查看新的变更&lt;/li&gt;
&lt;li&gt;尽量提交小 PR
不相关的改动，尽量放到不同的 PR，这样方便快速 review 合并&lt;/li&gt;
&lt;li&gt;尽量减少 force push
因为 force push 之后，review 意见就对不上原始的代码记录了，这样不利于其他人了解 review 的过程。除非是因为需要 rebase 处理跟 master 的冲突，这种 rebase 后就只能 force push 了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最后，很重要的一点，写清楚 commit log。&lt;/p&gt;
&lt;p&gt;首先 commit log 推荐以一个单词开头，这样方便快速知晓 commit 的类型，比如下面的这些：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;feature: 实现了一个新的功能/特性&lt;/li&gt;
&lt;li&gt;change: 没有向后兼容的变更&lt;/li&gt;
&lt;li&gt;refactor: 代码重构&lt;/li&gt;
&lt;li&gt;bugfix: bug 修复&lt;/li&gt;
&lt;li&gt;optimize: 性能优化相关的变更&lt;/li&gt;
&lt;li&gt;doc: 文档变更，包括注释&lt;/li&gt;
&lt;li&gt;tests: 测试用例相关的变更&lt;/li&gt;
&lt;li&gt;style: 代码风格相关的调整&lt;/li&gt;
&lt;li&gt;sample: 示例相关的变更&lt;/li&gt;
&lt;li&gt;chore: 其他不涉及核心逻辑的小改动&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;开头单词之后，是简要介绍一下改动的内容，比如新增了什么功能，如果是 bugfix 的话，还需要说明 bug 复现的条件，以及危害。
比如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bugfix: got the wrong CACert filename when converting the listen filter from istio LDS, mosn may not listen success then.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果比较复杂，一句话写不清楚的话，也可以写多行，commit log 不用怕太长。&lt;/p&gt;
&lt;p&gt;如果英文不容易写清楚，在 PR comment 里用中文描述清楚也可以的。&lt;/p&gt;
&lt;p&gt;最后，祝玩得开心。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 教程</title>
      <link>https://mosn.io/docs/open-source/contributing-source-code/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mosn.io/docs/open-source/contributing-source-code/tutorial/</guid>
      <description>
        
        
        &lt;p&gt;MOSN 教程使用 KataCoda 作为线上环境，无需自己部署环境，提供交互式的学习体验，请访问 &lt;a href=&#34;https://www.katacoda.com/mosn/courses/istio&#34;&gt;KataCoda 上的 MOSN 教程&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;教程列表&#34;&gt;教程列表&lt;/h2&gt;
&lt;p&gt;当前支持的教程如下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://katacoda.com/mosn/courses/istio/mosn-with-istio&#34;&gt;在 Istio 中集成 MOSN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.katacoda.com/mosn/courses/istio/istio-mosn-adapt-dubbo&#34;&gt;使用 MOSN 在 Istio 环境中运行 Dubbo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.katacoda.com/mosn/courses/istio/mosn-with-skywalking&#34;&gt;在 MOSN 中集成 SkyWalking&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;贡献教程&#34;&gt;贡献教程&lt;/h2&gt;
&lt;p&gt;MOSN 教程源码位于 &lt;a href=&#34;https://github.com/mosn/mosn-tutorial&#34;&gt;mosn/mosn-tutorial&lt;/a&gt; 仓库中，参与贡献请阅读&lt;a href=&#34;https://github.com/mosn/mosn-tutorial/blob/master/contributing_zh.md&#34;&gt;贡献书册&lt;/a&gt;。&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
