<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MOSN â€“ Blog</title>
    <link>https://mosn.io/blog/</link>
    <description>Recent content in Blog on MOSN</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://mosn.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Blog: Announcing MOSN v0.11.0</title>
      <link>https://mosn.io/blog/releases/v0.11.0/</link>
      <pubDate>Fri, 03 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://mosn.io/blog/releases/v0.11.0/</guid>
      <description>
        
        
        

&lt;p&gt;We are happy to announce the release of &lt;a href=&#34;https://github.com/mosn/mosn/releases/tag/v0.11.0&#34; target=&#34;_blank&#34;&gt;MOSN v0.11.0&lt;/a&gt;. You can see the changelog below.&lt;/p&gt;

&lt;h3 id=&#34;new-features&#34;&gt;New features&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Support the extension of Listener Filter, the transparent hijacking capability is implemented based on Listener Filter &lt;a href=&#34;https://github.com/wangfakang&#34; target=&#34;_blank&#34;&gt;@wangfakang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;New Set method for variable mechanism &lt;a href=&#34;https://github.com/neverhook&#34; target=&#34;_blank&#34;&gt;@neverhook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added automatic retry and exception handling when SDS Client fails &lt;a href=&#34;https://github.com/pxzero&#34; target=&#34;_blank&#34;&gt;@pxzero&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Improve TraceLog and support injecting context &lt;a href=&#34;https://github.com/taoyuanyuan&#34; target=&#34;_blank&#34;&gt;@taoyuanyuan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added FeatureGate &lt;code&gt;auto_config&lt;/code&gt;, when the feature is enabled, the dynamically updated configuration will be saved to the startup configuration &lt;a href=&#34;https://github.com/nejisama&#34; target=&#34;_blank&#34;&gt;@nejisama&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;refactoring&#34;&gt;Refactoring&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Refactored XProtocol Engine and reimplemented SOFARPC protocol &lt;a href=&#34;https://github.com/neverhook&#34; target=&#34;_blank&#34;&gt;@neverhook&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Removed SOFARPC Healthcheck filter and changed to xprotocol&amp;rsquo;s built-in heartbeat implementation&lt;/li&gt;
&lt;li&gt;Removed the original protocol conversion (protocol conv) support of the SOFARPC protocol, and added a new protocol conversion extension implementation capability based on stream filter&lt;/li&gt;
&lt;li&gt;xprotocol adds idle free and keepalive&lt;/li&gt;
&lt;li&gt;Protocol analysis and optimization&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Modify the Encode method parameters of HTTP2 protocol &lt;a href=&#34;https://github.com/taoyuanyuan&#34; target=&#34;_blank&#34;&gt;@taoyuanyuan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Streamlined LDS interface parameters &lt;a href=&#34;https://github.com/nejisama&#34; target=&#34;_blank&#34;&gt;@nejisama&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Modified the routing configuration model, abandoned &lt;code&gt;connection_manager&lt;/code&gt; &lt;a href=&#34;https://github.com/nejisama&#34; target=&#34;_blank&#34;&gt;@nejisama&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;optimization&#34;&gt;Optimization&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Optimize Upstream dynamic domain name resolution mechanism &lt;a href=&#34;https://github.com/wangfakang&#34; target=&#34;_blank&#34;&gt;@wangfakang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Optimized TLS encapsulation, added error log, and modified timeout period in compatibility mode &lt;a href=&#34;https://github.com/nejisama&#34; target=&#34;_blank&#34;&gt;@nejisama&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Optimize timeout setting, use variable mechanism to set timeout &lt;a href=&#34;https://github.com/neverhook&#34; target=&#34;_blank&#34;&gt;@neverhook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dubbo parsing library dependency upgraded to 1.5.0 &lt;a href=&#34;https://github.com/cch123&#34; target=&#34;_blank&#34;&gt;@cch123&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reference path migration script adds OS adaptation &lt;a href=&#34;https://github.com/taomaree&#34; target=&#34;_blank&#34;&gt;@taomaree&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;bug-fix&#34;&gt;Bug fix&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Fix the problem of losing query string during HTTP2 protocol forwarding &lt;a href=&#34;https://github.com/champly&#34; target=&#34;_blank&#34;&gt;@champly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Announcing MOSN v0.10.0</title>
      <link>https://mosn.io/blog/releases/v0.10.0/</link>
      <pubDate>Fri, 28 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://mosn.io/blog/releases/v0.10.0/</guid>
      <description>
        
        
        

&lt;p&gt;We are happy to announce the release of &lt;a href=&#34;https://github.com/mosn/mosn/releases/tag/v0.10.0&#34; target=&#34;_blank&#34;&gt;MOSN v0.10.0&lt;/a&gt;. You can see the changelog below.&lt;/p&gt;

&lt;h3 id=&#34;new-features&#34;&gt;New features&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Support multi-process plugin mode (&lt;a href=&#34;https://github.com/mosn/mosn/pull/979&#34; target=&#34;_blank&#34;&gt;#979&lt;/a&gt;, &lt;a href=&#34;https://github.com/taoyuanyuan&#34; target=&#34;_blank&#34;&gt;@taoyuanyuan&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Startup parameters support service-meta parameters (&lt;a href=&#34;https://github.com/mosn/mosn/pull/952&#34; target=&#34;_blank&#34;&gt;#952&lt;/a&gt;, &lt;a href=&#34;https://github.com/trainyao&#34; target=&#34;_blank&#34;&gt;@trainyao&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Supports abstract UDS mode to mount SDS socket&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;refactoring&#34;&gt;Refactoring&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Separate some MOSN base library code into &lt;a href=&#34;https://github.com/mosn/pkg&#34; target=&#34;_blank&#34;&gt;mosn.io/pkg&lt;/a&gt; package&lt;/li&gt;
&lt;li&gt;Separate MOSN interface definition to &lt;a href=&#34;https://github.com/mosn/api&#34; target=&#34;_blank&#34;&gt;mosn.io/api&lt;/a&gt; package&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;optimization&#34;&gt;Optimization&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The log basic module is separated into &lt;code&gt;mosn.io/pkg&lt;/code&gt;, and the log of MOSN is optimized&lt;/li&gt;
&lt;li&gt;Optimize FeatureGate (&lt;a href=&#34;https://github.com/mosn/mosn/pull/927&#34; target=&#34;_blank&#34;&gt;#927&lt;/a&gt;, &lt;a href=&#34;https://github.com/nejisama&#34; target=&#34;_blank&#34;&gt;@nejisama&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Added processing when failed to get SDS configuration&lt;/li&gt;
&lt;li&gt;When CDS deletes a cluster dynamically, it will stop the health check corresponding to the cluster&lt;/li&gt;
&lt;li&gt;The callback function when SDS triggers certificate update adds certificate configuration as a parameter&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;bug-fixes&#34;&gt;Bug fixes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Fixed a memory leak issue when SOFARPC Oneway request failed&lt;/li&gt;
&lt;li&gt;Fixed the issue of 502 error when receiving non-standard HTTP response&lt;/li&gt;
&lt;li&gt;Fixed possible conflicts during DUMP configuration&lt;/li&gt;
&lt;li&gt;Fixed the error of Request and Response Size of TraceLog statistics&lt;/li&gt;
&lt;li&gt;Fixed write timeout failure due to concurrent write connections&lt;/li&gt;
&lt;li&gt;Fixed serialize bug&lt;/li&gt;
&lt;li&gt;Fixed the problem that the memory reuse buffer is too large when the connection is read, causing the memory consumption to be too high&lt;/li&gt;
&lt;li&gt;Optimize Dubbo related implementation in XProtocol&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
